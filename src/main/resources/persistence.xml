<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" version="2.2">

  <!-- Nome que o código usa com @PersistenceContext(unitName="mypersistence") -->
  <persistence-unit name="mypersistence" transaction-type="JTA">

    <!--Diz ao JPA qual implementação usar para falar com a base de dados  -->
    <!-- Este provider é a classe do hibernate q o wildfly vai carregar p+ implementar a persistencia. Se eu n colocar nd o wildfly usa o hibernate por defeito -->
    <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

    <!-- Usa o datasource que JÁ existe no WildFly -->
    <jta-data-source>java:jboss/datasources/ExampleDS</jta-data-source>

    <properties>
      <!-- usa só UMA forma de geração de schema, standard JPA -->
      <property name="javax.persistence.schema-generation.database.action" value="update"/>

      <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/> //O dialect diz ao Hibernate qual linguagem SQL usar p conversar c o banco de dados

      <property name="hibernate.show_sql" value="true"/> //diz ao hinbernate p mostrar no console cada query SQL q ele executa
      
      <property name="hibernate.format_sql" value="true"/>//Formata as queries mostradas no console para ficarem mais legíveis, com quebras de linha e indentação
    </properties>
  </persistence-unit>
</persistence>
